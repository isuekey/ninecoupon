{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Nine Coupon",
    "contact": {
      "name": "Nine Coupon API Team",
      "url": "http://139.162.82.31"
    },
    "license": {
      "name": "Creative Commons 4.0 International",
      "url": "http://creativecommons.org/licenses/by/4.0/"
    }
  },
  "host": "139.162.82.31",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/coupon/template": {
      "get": {
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "tags": [
          "Coupon template Operations"
        ],
        "operationId": "getAllCouponTemplate",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The status to filter by",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type to filter by",
            "type": "string"
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The origin to filter by",
            "type": "string"
          }
        ],
        "summary": "Finds all coupon template in the system",
        "responses": {
          "200": {
            "description": "Coupon template response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CouponTemplate"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "tags": [
          "Coupon template Operations"
        ],
        "operationId": "createCouponeTemplate",
        "summary": "Creates a new coupon template",
        "parameters": [
          {
            "name": "couponTemplate",
            "in": "body",
            "description": "The coupon template to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newCouponTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created coupon template response",
            "schema": {
              "$ref": "#/definitions/CouponTemplate"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/coupon/template/{couponTemplateId}": {
      "delete": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "tags": [
          "Coupon template Operations"
        ],
        "description": "Deletes the coupon template by id",
        "operationId": "deleteCouponTemplateById",
        "responses": {
          "200": {
            "description": "coupon template deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "tags": [
          "Coupon template Operations"
        ],
        "operationId": "getCouopnTemplateById",
        "summary": "Finds the coupon template by id",
        "responses": {
          "200": {
            "description": "Coupon template response",
            "schema": {
              "$ref": "#/definitions/CouponTemplate"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "couponTemplateId",
          "in": "path",
          "description": "The coupon template will be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ]
    },
    "/coupon/template/instance": {
      "get": {
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "tags": [
          "Coupon Template Instance Operations"
        ],
        "operationId": "getCouponTemplateInstance",
        "description": "Query the coupon template instance",
        "responses": {
          "200": {
            "description": "Coupon template instance response",
            "schema": {
              "$ref": "#/definitions/CouponTemplateInstance"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "tags": [
          "Coupon Template Instance Operations"
        ],
        "operationId": "createCouponTemplateInance",
        "summary": "Creates a new coupon template instance",
        "parameters": [
          {
            "name": "couponTemplateInstance",
            "in": "body",
            "description": "The coupon template instance to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newCouponTemplateInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created coupon template instance response",
            "schema": {
              "$ref": "#/definitions/CouponTemplateInstance"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/coupon/template/instance/{couponTemplateInstanceId}": {
      "delete": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "Deletes the coupon template instance by id",
        "operationId": "deleteCouponTemplateInstanceById",
        "responses": {
          "200": {
            "description": "coupon template instance deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "tags": [
          "Coupon template Operations"
        ],
        "operationId": "getCouopnTemplateInstanceById",
        "summary": "Finds the coupon template by id",
        "responses": {
          "200": {
            "description": "Coupon template response",
            "schema": {
              "$ref": "#/definitions/CouponTemplateInstance"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "couponTemplateInstanceId",
          "in": "path",
          "description": "Id of coupon template",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ]
    },
    "/coupon/instance": {
      "post": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "create coupon instance",
        "operationId": "createCouponInstance",
        "parameters": [
          {
            "name": "couponTemplateInstance",
            "in": "body",
            "description": "The coupon template instance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newCouponTemplateInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create coupon instance"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/coupon/instance/{appUserId}": {
      "get": {
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "description": "get the coupon of the user",
        "operationId": "getCouponOfUser",
        "parameters": [
          {
            "name": "appUserId",
            "in": "path",
            "description": "The user id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon template response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CouponInstance"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "get the coupon of lottery",
        "operationId": "receiveTheCoupon",
        "parameters": [
          {
            "name": "appUserId",
            "in": "path",
            "description": "The user who receive the coupon",
            "required": true,
            "type": "string"
          },
          {
            "name": "couponInstance",
            "in": "body",
            "description": "Which is received",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon is received"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/coupon/instance/{appUserId}/lottery": {
      "get": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "get the coupon of lottery",
        "operationId": "getCouponLotteryOfUser",
        "parameters": [
          {
            "name": "appUserId",
            "in": "path",
            "description": "The user who get the coupon of lottery",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon template response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CouponInstance"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/coupon/instance/writeoff/{couponInstanceId}": {
      "put": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "write off the coupon instance",
        "operationId": "writeOffTheCouponInstance",
        "parameters": [
          {
            "name": "couponInstanceId",
            "in": "path",
            "description": "The coupon which will be written off",
            "required": true,
            "type": "string"
          },
          {
            "name": "couponDetail",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/newCouponConsumption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon template response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CouponInstance"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/account/signup": {
      "post": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "create an account",
        "operationId": "createAccount",
        "parameters": [
          {
            "name": "account",
            "in": "body",
            "description": "Which will be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account create"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/account/signin": {
      "post": {
        "security": [
          {
            "oauth2": [
              "write"
            ]
          }
        ],
        "description": "login an account",
        "operationId": "loginAccount",
        "parameters": [
          {
            "name": "account",
            "in": "body",
            "description": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account sign in"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/account/status/{accountPhone}": {
      "get": {
        "security": [
          {
            "oauth2": [
              "read"
            ]
          }
        ],
        "description": "create an account",
        "operationId": "findTheCountByPhone",
        "parameters": [
          {
            "name": "accountPhone",
            "in": "path",
            "description": "account phone key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The phone exist"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CouponTemplate": {
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled",
            "auditting"
          ],
          "description": "coupon template active status"
        },
        "origin": {
          "type": "string"
        },
        "createAt": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "name",
        "data"
      ]
    },
    "newCouponTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/CouponTemplate"
        }
      ],
      "required": [
        "name",
        "data"
      ]
    },
    "CouponTemplateInstance": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled",
            "auditting"
          ],
          "description": "coupon template active status"
        },
        "publishType": {
          "type": "string"
        },
        "createAt": {
          "format": "int64",
          "type": "integer"
        },
        "templateInfo": {
          "$ref": "#/definitions/CouponTemplate"
        },
        "brand": {
          "$ref": "#/definitions/Brand"
        }
      },
      "required": [
        "id",
        "name",
        "data",
        "templateInfo",
        "publishType",
        "brand"
      ]
    },
    "newCouponTemplateInstance": {
      "allOf": [
        {
          "$ref": "#/definitions/CouponTemplateInstance"
        }
      ],
      "required": [
        "name",
        "data",
        "templateInfo",
        "publishType",
        "brand"
      ]
    },
    "CouponInstance": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled",
            "auditting"
          ],
          "description": "coupon template active status"
        },
        "templateInstance": {
          "$ref": "#/definitions/CouponTemplateInstance"
        }
      },
      "required": [
        "id",
        "name",
        "data",
        "templateInstance"
      ]
    },
    "newCouponInstance": {
      "allOf": [
        {
          "$ref": "#/definitions/CouponInstance"
        }
      ],
      "required": [
        "name",
        "data",
        "templateInstance"
      ]
    },
    "CouponConsumption": {
      "properties": {
        "id": {
          "description": "unique identifier for Shop",
          "format": "int64",
          "type": "integer"
        },
        "couponInstance": {
          "$ref": "#/definitions/CouponInstance"
        },
        "consumer": {
          "$ref": "#/definitions/Account"
        },
        "clerk": {
          "$ref": "#/definitions/Account"
        },
        "createAt": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "id",
        "couponInstance",
        "consumer"
      ]
    },
    "newCouponConsumption": {
      "allOf": [
        {
          "$ref": "#/definitions/CouponConsumption"
        }
      ],
      "required": [
        "couponInstance",
        "consumer"
      ]
    },
    "Shop": {
      "properties": {
        "id": {
          "description": "unique identifier for Shop",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Account"
        },
        "brand": {
          "$ref": "#/definitions/Brand"
        },
        "createAt": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "name",
        "brand"
      ]
    },
    "newShop": {
      "allOf": [
        {
          "$ref": "#/definitions/Shop"
        }
      ],
      "required": [
        "name",
        "brand"
      ]
    },
    "Brand": {
      "properties": {
        "id": {
          "description": "unique identifier for brand",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "description": "Brand status in the app",
          "enum": [
            "enabled",
            "disabled",
            "arrears"
          ],
          "type": "string"
        },
        "owner": {
          "$ref": "#definitions/Account"
        },
        "createAt": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "newBrand": {
      "allOf": [
        {
          "$ref": "#/definitions/Brand"
        }
      ],
      "required": [
        "name"
      ]
    },
    "Account": {
      "properties": {
        "id": {
          "description": "unique identifier for brand",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "avatar": {
          "type": "string"
        },
        "createAt": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "Account status in the app",
          "enum": [
            "enabled",
            "disabled",
            "arrears"
          ],
          "type": "string"
        },
        "promoter": {
          "type": "integer",
          "description": "business promoter"
        },
        "type": {
          "description": "Account type in the app",
          "enum": [
            "customer",
            "clerk",
            "merchant",
            "market",
            "admin"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "phone",
        "type"
      ]
    },
    "newAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Account"
        }
      ],
      "required": [
        "phone",
        "type"
      ]
    },
    "Login": {
      "properties": {
        "account": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "properties": {
        "id": {
          "description": "unique identifier for brand",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Mechanism": {
      "properties": {
        "id": {
          "description": "unique identifier for brand",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "shop": {
          "$ref": "#/definitions/Shop"
        }
      },
      "required": [
        "name",
        "organization"
      ]
    },
    "Tag": {
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Location": {
      "properties": {
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "produces": [
    "application/json",
    "application/xml",
    "text/plain",
    "text/html"
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "scopes": {
        "read": "Read access.",
        "write": "Write access"
      },
      "flow": "accessCode",
      "authorizationUrl": "http://petstore.swagger.wordnik.com/oauth/authorize",
      "tokenUrl": "http://petstore.swagger.wordnik.com/oauth/token"
    }
  }
}
